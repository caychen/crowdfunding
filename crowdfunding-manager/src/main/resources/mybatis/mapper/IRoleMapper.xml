<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.com.cay.crowdfunding.mapper.IRoleMapper">
	<insert id="insert" parameterType="org.com.cay.crowdfunding.entity.Role" useGeneratedKeys="true" keyColumn="id" keyProperty="id">
		insert into t_role
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="name != null and name != ''">
				name,
			</if>
			<if test="createDate != null">
				createDate,
			</if>
			<if test="updateDate != null">
				updateDate,
			</if>
		</trim>
		<trim prefix="VALUES(" suffix=")" suffixOverrides=",">
			<if test="name != null and name != ''">
				#{name},
			</if>
			<if test="createDate != null">
				#{createDate},
			</if>
			<if test="updateDate != null">
				#{updateDate},
			</if>
		</trim>
	</insert>
	<update id="update" parameterType="org.com.cay.crowdfunding.entity.Role">
		update t_role
		<trim prefix="set" suffixOverrides=",">
			<if test="name != '' and name != null">
				name = #{name},
			</if>
			<if test="updateDate != null">
				updateDate = #{updateDate},
			</if>
		</trim>
		<where>
			id = #{id}
		</where>
	</update>
	<delete id="batchDelete" parameterType="java.lang.Integer">
		delete from t_role
		<where>
			<if test="ids != null and ids.size() > 0">
				id in
				<foreach collection="ids" open="(" close=")" separator="," item="id">
					#{id}
				</foreach>
			</if>
		</where>
	</delete>

	<select id="queryBy" resultType="org.com.cay.crowdfunding.entity.Role" parameterType="string">
		SELECT * FROM t_role
		<where>
			<if test="queryText != null and queryText != ''">
				and name like CONCAT('%',#{queryText},'%')
			</if>
		</where>
	</select>

	<insert id="doAssign" parameterType="map">
		<if test="permissionIds != null and permissionIds.size() > 0">
			<foreach collection="permissionIds" item="permissionId">
				insert into t_role_permission(roleid, permissionid)
				select #{roleId}, #{permissionId} from dual
				<where>
					not exists(
					select 1 from t_role_permission where roleid = #{roleId} and permissionId = #{permissionId}
					);
				</where>
			</foreach>
		</if>
	</insert>

	<delete id="batchDeleteUsersByRoleIds" parameterType="map">
		delete from t_user_role
		<where>
			<if test="roleIds != null and roleIds.size() > 0">
				and roleid in
				<foreach collection="roleIds" item="roleId" open="(" close=")" separator=",">
					#{roleId}
				</foreach>
			</if>
		</where>
	</delete>

	<delete id="batchDeletePermissionsByRoleIds" parameterType="map">
		delete from t_role_permission
		<where>
			<if test="roleIds != null and roleIds.size() > 0">
				and roleid in
				<foreach collection="roleIds" item="roleId" open="(" close=")" separator=",">
					#{roleId}
				</foreach>
			</if>
		</where>
	</delete>
</mapper>